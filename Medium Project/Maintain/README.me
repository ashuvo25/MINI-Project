Introduction:
Two File are given :
    1.maintain_with_TKinter.py 
    2.maintain.py
The Personal Money Manage is a Python-based desktop application designed to manage financial transactions stored in a CSV file.
The application provides a graphical user interface (GUI) using the tkinter library and GUI desigen code is Generated by ChatGPT 4o(maintain_with_TKinter.py only GUI), 
allowing users to add new transactions and view transaction history within a specified date range.It helps to manage your daily cost.

Requirements:
    --Python 3
    --pandas library
    --tkinter library
    --datetime
    --os
    --csv

User Interface:

    -Add Entry Tab
    -This tab allows users to add new transactions to the CSV file.

    -Date (dd-mm-yyyy): Enter the transaction date in the format dd-mm-yyyy. If left blank, the current date will be used.
    -Amount: Enter the transaction amount. Only positive numbers are accepted.
    -Category (D for Deposit, C for Cost): Enter D for a deposit or C for a cost.
    -Description: Enter an optional description for the transaction.
    -Add Entry Button: Click to add the transaction to the CSV file.

View History Tab:
    -This tab allows users to view transaction history within a specified date range.

    -Start Date (dd-mm-yyyy): Enter the start date of the transaction history period.
    -End Date (dd-mm-yyyy): Enter the end date of the transaction history period.
    -View History Button: Click to display the transaction history in the text area below.

Class and Function Descriptions:
    --CSV Class:    
        -csv_File: Path to the CSV file.
        -col: Column names for the CSV.
        -init_csv(): Initializes the CSV file if it doesn't exist.
        -add_items(date, amount, catagory, description): Adds a new entry to the CSV file.
        -history(start_date, end_date): Retrieves transaction history between specified dates.

App Class:
    -initUI(): Initializes the user interface.
    -create_add_tab(): Creates the tab for adding entries.
    -create_history_tab(): Creates the tab for viewing transaction history.
    -add_entry(): Adds a new entry to the CSV file.
    -view_history(): Displays the transaction history between the specified dates.

Example Usage:

        Adding a New Entry
        Open the application.
        Navigate to the "Add Entry" tab.
        Enter the transaction details:
        Date: 15-07-2024
        Amount: 100.00
        Category: D
        Description: Salary
        Click the "Add Entry" button. A message box will confirm the successful addition of the transaction.
        Viewing Transaction History
        Open the application.
        Navigate to the "View History" tab.
        Enter the date range:
        Start Date: 01-07-2024
        End Date: 31-07-2024
        Click the "View History" button. The transaction history will be displayed in the text area.

Error Handling:
    -Invalid category input will show an error message box.
    -Negative amount values will show an error message box.
    -Incorrect date format will show an error message box.
    -Missing start or end date in the history tab will show an error message box.
